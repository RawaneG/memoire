name: Deploy to Fly.io

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend to Fly.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        working-directory: ./backend
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          if [ -z "$FLY_API_TOKEN" ]; then
            echo "‚ö†Ô∏è  FLY_API_TOKEN not set. Skipping deployment."
            echo "Please set this secret in your GitHub repository settings."
            exit 0
          fi
          flyctl deploy --remote-only
          echo "‚úÖ Backend deployed successfully to Fly.io!"

  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment
        working-directory: ./frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          if [ -z "$VERCEL_TOKEN" ]; then
            echo "‚ö†Ô∏è  VERCEL_TOKEN not set. Skipping deployment."
            exit 0
          fi
          vercel pull --yes --environment=production --token=$VERCEL_TOKEN

      - name: Build Project
        working-directory: ./frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          if [ -z "$VERCEL_TOKEN" ]; then
            exit 0
          fi
          vercel build --prod --token=$VERCEL_TOKEN

      - name: Deploy to Vercel
        working-directory: ./frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          if [ -z "$VERCEL_TOKEN" ]; then
            exit 0
          fi
          vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
          echo "‚úÖ Frontend deployed successfully to Vercel!"

  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    steps:
      - name: Deployment Summary
        run: |
          echo "üöÄ Deployment completed!"
          echo "Backend (Fly.io): ${{ needs.deploy-backend.result }}"
          echo "Frontend (Vercel): ${{ needs.deploy-frontend.result }}"
